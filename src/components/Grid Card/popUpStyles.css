.popUpContainer {
  width: 100%;
  height: 100%;
  position: absolute;
  transform: translateY(-98%);
  pointer-events: none;
  z-index: -2;
}

.popUpCard {
  width: 50%;
  height: 50%;
  transform: translateX(calc(var(--GridCardSize) * 0.23));
  position: absolute;
  transition: transform 0.15s;
}

.popUpContainer > * {
  clip-path: inset(0% round 4% 4% 4% 4%);
  background-color: red;
  background-size: cover;
  background-position: center;
}

/* HOVER ANIMATION */

.gridCardBox:hover ~ .popUpContainer > :nth-child(1) {
  transform: translateY(calc(var(--GridCardSize) * -0.1))
    translateX(calc(var(--GridCardSize) * -0.05)) rotate(-18deg);
}

.gridCardBox:hover ~ .popUpContainer > :nth-child(2) {
  transform: translateY(calc(var(--GridCardSize) * -0.17))
    translateX(calc(var(--GridCardSize) * 0.23)) rotate(-1deg);
}

.gridCardBox:hover ~ .popUpContainer > :nth-child(3) {
  transform: translateY(calc(var(--GridCardSize) * -0.1))
    translateX(calc(var(--GridCardSize) * 0.5)) rotate(18deg);
}

.fullGridCard:focus > .popUpContainer > :nth-child(1) {
  transform: translateY(calc(var(--GridCardSize) * -0.1))
    translateX(calc(var(--GridCardSize) * -0.05)) rotate(-18deg);
}

.fullGridCard:focus > .popUpContainer > :nth-child(2) {
  transform: translateY(calc(var(--GridCardSize) * -0.17))
    translateX(calc(var(--GridCardSize) * 0.23)) rotate(-1deg);
}

.fullGridCard:focus > .popUpContainer > :nth-child(3) {
  transform: translateY(calc(var(--GridCardSize) * -0.1))
    translateX(calc(var(--GridCardSize) * 0.5)) rotate(18deg);
}
